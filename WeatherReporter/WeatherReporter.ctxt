#BlueJ class context
comment0.target=WeatherReporter
comment0.text=\n\ WeatherReporter\n\ Analyses\ weather\ data\ from\ files\ of\ weather-station\ measurements.\n\n\ The\ weather\ data\ files\ consist\ of\ a\ set\ of\ measurements\ from\ weather\ stations\ around\n\ New\ Zealand\ at\ a\ series\ of\ date/time\ stamps.\n\ For\ each\ date/time,\ the\ file\ has\:\n\ \ A\ line\ with\ the\ date\ and\ time\ (four\ integers\ for\ day,\ month,\ year,\ and\ time)\n\ \ \ eg\ "24\ 01\ 2021\ 1900"\ \ for\ 24\ Jan\ 2021\ at\ 19\:00\ \n\ \ A\ line\ with\ the\ number\ of\ weather-stations\ for\ that\ date/time\ \n\ \ Followed\ by\ a\ line\ of\ data\ for\ each\ weather\ station\:\n\ \ \ -\ name\:\ one\ token,\ eg\ "Cape-Reinga"\n\ \ \ -\ (x,\ y)\ coordinates\ on\ the\ map\:\ two\ numbers,\ eg\ \ \ 186\ 38\n\ \ \ -\ four\ numbers\ for\ temperature,\ dew-point,\ suface-pressure,\ and\ sea-level-pressure\n\ Some\ of\ the\ data\ files\ (eg\ hot-weather.txt,\ and\ cold-weather.txt)\ have\ data\ for\ just\ one\ date/time.\n\ The\ weather-all.txt\ has\ data\ for\ lots\ of\ times.\ The\ date/times\ are\ all\ in\ order.\n\ You\ should\ look\ at\ the\ files\ before\ trying\ to\ complete\ the\ methods\ below.\n\n\ Note,\ the\ data\ files\ were\ extracted\ from\ MetOffice\ weather\ data\ from\ 24-26\ January\ 2021\n
comment1.params=
comment1.target=void\ plotTemperatures()
comment1.text=\ \ \ CORE\n\ Plots\ the\ temperatures\ for\ one\ date/time\ from\ a\ file\ on\ a\ map\ of\ NZ\n\ Asks\ for\ the\ name\ of\ the\ file\ and\ opens\ a\ Scanner\n\ It\ is\ good\ design\ to\ call\ plotSnapshot,\ passing\ the\ Scanner\ as\ an\ argument.\n
comment2.params=valueName\ value\ x\ y\ size
comment2.target=void\ drawCircle(java.lang.String,\ double,\ double,\ double,\ double)
comment2.text=\n\ CORE\:\n\ \ Plot\ the\ temperatures\ for\ the\ next\ snapshot\ in\ the\ file\ by\ drawing\n\ \ \ a\ filled\ coloured\ circle\ (size\ DIAM)\ at\ each\ weather-station\ location.\n\ \ The\ colour\ of\ the\ circle\ should\ indicate\ the\ temperature.\n\n\ \ The\ method\ should\n\ \ \ -\ read\ the\ date/time\ and\ draw\ the\ date/time\ at\ the\ top-left\ of\ the\ map.\n\ \ \ -\ read\ the\ number\ of\ stations,\ then\n\ \ \ -\ for\ each\ station,\n\ \ \ \ \ -\ read\ the\ name,\ coordinates,\ and\ data,\ and\n\ \ \ \ \ -\ plot\ the\ temperature\ for\ that\ station.\ \n\ \ \ (Hint\:\ You\ will\ find\ the\ getTemperatureColor(...)\ method\ useful.)\n\n\ \ COMPLETION\:\n\ \ Also\ finds\ the\ highest\ and\ lowest\ temperatures\ at\ that\ time,\ and\n\ \ plots\ them\ with\ a\ larger\ circle.\n\ \ (Hint\:\ If\ more\ than\ one\ station\ has\ the\ highest\ (or\ coolest)\ temperature,\n\ \ \ \ \ \ \ \ \ you\ only\ need\ to\ draw\ a\ larger\ circle\ for\ one\ of\ them.\n
comment3.params=sc
comment3.target=void\ plotSnapshot(java.util.Scanner)
comment4.params=
comment4.target=void\ animateTemperatures()
comment4.text=\ \ \ COMPLETION\n\ Displays\ an\ animated\ view\ of\ the\ temperatures\ over\ all\n\ the\ times\ in\ a\ weather\ data\ files,\ plotting\ the\ temperatures\n\ for\ the\ first\ date/time,\ as\ in\ the\ core,\ pausing\ for\ half\ a\ second,\n\ then\ plotting\ the\ temperatures\ for\ the\ second\ date/time,\ and\n\ repeating\ until\ all\ the\ data\ in\ the\ file\ has\ been\ shown.\n\ \n\ (Hint,\ use\ the\ plotSnapshot(...)\ method\ that\ you\ used\ in\ the\ core)\n
comment5.params=
comment5.target=void\ reportStation()
comment5.text=\ \ \ COMPLETION\n\ Prints\ a\ table\ of\ all\ the\ weather\ data\ from\ a\ single\ station,\ one\ line\ for\ each\ day/time.\n\ Asks\ for\ the\ name\ of\ the\ station.\n\ Prints\ a\ header\ line\n\ Then\ for\ each\ line\ of\ data\ for\ that\ station\ in\ the\ weather-all.txt\ file,\ it\ prints\ \n\ a\ line\ with\ the\ date/time,\ temperature,\ dew-point,\ surface-pressure,\ and\ \ sealevel-pressure\n\ If\ there\ are\ no\ entries\ for\ that\ station,\ it\ will\ print\ a\ message\ saying\ "Station\ not\ found".\n\ Hint,\ the\ \\t\ in\ a\ String\ is\ the\ tab\ character,\ which\ helps\ to\ make\ the\ table\ line\ up.\n
comment6.params=temp
comment6.target=java.awt.Color\ getTemperatureColor(double)
comment6.text=\ Returns\ a\ color\ representing\ that\ temperature\n\ \ The\ colors\ are\ increasingly\ blue\ below\ 15\ degrees,\ and\n\ \ increasingly\ red\ above\ 15\ degrees.\n
comment7.params=
comment7.target=void\ setupGUI()
comment8.params=arguments
comment8.target=void\ main(java.lang.String[])
numComments=9
